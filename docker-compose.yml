services:
  # PostgreSQL Database (for Supabase)
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
    volumes:
      # Mount the persistent data volume and initialization scripts
      - postgres_data:/var/lib/postgresql/data
      - ./database/00-setup-schemas.sql:/docker-entrypoint-initdb.d/00-setup-schemas.sql
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase Auth
  auth:
    image: supabase/gotrue:v2.158.1
    restart: unless-stopped
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@db:5432/postgres?search_path=auth
      API_EXTERNAL_URL: https://etoh.doctorfranz.com/supabase
      GOTRUE_SITE_URL: https://etoh.doctorfranz.com
      GOTRUE_URI_ALLOW_LIST: "https://etoh.doctorfranz.com,http://localhost:19006,http://localhost:3000"
      GOTRUE_DISABLE_SIGNUP: "false"
      GOTRUE_JWT_SECRET: ${JWT_SECRET}
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_ENABLE_SIGNUP: "true"
      GOTRUE_MAILER_AUTOCONFIRM: "true"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  # Supabase REST API
  rest:
    image: postgrest/postgrest:v12.0.1
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      PGRST_DB_SCHEMAS: public,storage,graphql_public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_JWT_AUD: authenticated
      PGRST_JWT_ROLE_CLAIM_KEY: .role
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_SERVER_PORT: 3000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  # Supabase Realtime
  realtime:
    image: supabase/realtime:v2.28.32
    restart: unless-stopped
    environment:
      PORT: 4000
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: postgres
      DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
      DB_ENC_KEY: supabaserealtime
      API_JWT_SECRET: ${JWT_SECRET}
      FLY_ALLOC_ID: fly123
      FLY_APP_NAME: realtime
      SECRET_KEY_BASE: your-super-secret-and-long-secret-key-base-change-me
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  # Supabase Storage
  storage:
    image: supabase/storage-api:v1.0.6
    restart: unless-stopped
    environment:
      ANON_KEY: ${EXPO_PUBLIC_SUPABASE_ANON_KEY}
      SERVICE_KEY: ${EXPO_PUBLIC_SUPABASE_SERVICE_KEY}
      POSTGREST_URL: http://rest:3000
      PGRST_JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      FILE_SIZE_LIMIT: 2097152
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      STORAGE_S3_REGION: us-east-1
      TENANT_ID: stub
      REGION: stub
      GLOBAL_S3_BUCKET: stub
    volumes:
      - storage_data:/var/lib/storage
    depends_on:
      db:
        condition: service_healthy
      rest:
        condition: service_started # This is the fix
    networks:
      - app-network

  # Supabase Edge Functions
  functions:
    image: supabase/edge-runtime:v1.22.4
    restart: unless-stopped
    command: ["start", "-p", "8000"]
    environment:
      JWT_SECRET: ${JWT_SECRET}
      SUPABASE_URL: http://kong:8000
      SUPABASE_ANON_KEY: ${EXPO_PUBLIC_SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${EXPO_PUBLIC_SUPABASE_SERVICE_KEY}
      VERIFY_JWT: "false"
    volumes:
      - ./supabase/functions:/home/deno/functions:Z
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  # Kong API Gateway (combines all Supabase services)
  kong:
    image: kong:2.8-alpine
    restart: unless-stopped
    ports:
      - "8000:8000"  # Expose Kong gateway
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
      SUPABASE_ANON_KEY: ${EXPO_PUBLIC_SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${EXPO_PUBLIC_SUPABASE_SERVICE_KEY}
    volumes:
      - ./supabase/config/kong.yml:/var/lib/kong/kong.yml:ro
    depends_on:
      - auth
      - rest
      - realtime
      - storage
    networks:
      - app-network

  # Expo React Native App (supports web, pwa, mobile)
  app:
    build: .
    container_name: sud-etoh-app
    restart: unless-stopped
    ports:
      - "19006:80"
    depends_on:
      - kong
    networks:
      - app-network

networks:
  app-network:
    external: true
    name: secure-app-network

volumes:
  postgres_data:
  storage_data: